{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Desktop/Everything/School/4402/4402ClassProject/frontend4402/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //library to make http requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [sql, setSql] = useState('');\n  const [result, setResult] = useState([]); // State to store the API response\n\n  useEffect(() => {\n    // API call to http://localhost:8080/api/hello\n    axios.get('http://localhost:8080/api/hello').then(response => setMessage(response.data)).catch(error => setMessage('Error connecting to backend and database.\\nPlease make sure backend is up and running at ' + 'http://localhost:8080.\\nIf it is not, open the backend4402 folder in IntelliJ (or another IDE) and ' + 'run the main class in Example4402Application.'));\n  }, []);\n\n  // API call to http://localhost:8080/api/sql \n  const handleExecuteSQL = () => {\n    axios.post('http://localhost:8080/api/sql', {\n      sql: sql\n    }) // sql is the argument accepted by the backend\n    .then(response => {\n      setResult(response.data);\n    }).catch(error => {\n      console.error('Error executing SQL statement:', error);\n      setResult([]);\n    });\n  };\n  const handleSQLChange = e => {\n    setSql(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSC 4402 Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: example,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"SQL Statement:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: textAreaStyle,\n      value: sql,\n      onChange: handleSQLChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExecuteSQL,\n      style: buttonStyle,\n      children: \"Execute SQL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"SQL Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), result.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: \"pre-line\",\n            fontSize: \"12px\",\n            padding: \"8px\",\n            border: \"1px solid #ccc\",\n            width: '100%',\n            borderRadius: \"5px\"\n          },\n          children: JSON.stringify(item, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: example,\n      children: [\"example statements to try:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SELECT * FROM customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"INSERT INTO customer (first_name, last_name, phone_number, customer_license_num) VALUES (12629, 16726, 50000, '06/26/2025', '06/26/2026', 544); \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n// Some basic styles for the page\n_s(App, \"vhqxuoKI7A12sExpM6+Zswd58iM=\");\n_c = App;\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  fontFamily: 'monospace',\n  fontSize: '1.2rem',\n  textAlign: 'center',\n  marginTop: '50px'\n};\nconst textAreaStyle = {\n  width: '30%',\n  // Set a fixed width\n  minHeight: '10%',\n  // Set a minimum height\n  padding: '10px',\n  margin: '20px',\n  resize: 'none',\n  // Disable resizing\n  overflowY: 'auto' // Enable vertical scrolling if needed\n};\n\nconst example = {\n  width: '40%',\n  // Set a fixed width\n  minHeight: '10%',\n  // Set a minimum height\n  maxWidth: '50%',\n  padding: '10px',\n  resize: 'none',\n  // Disable resizing\n  fontSize: '1rem'\n};\nconst buttonStyle = {\n  backgroundColor: '#007bff',\n  color: 'white',\n  padding: '10px 20px',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer'\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","message","setMessage","sql","setSql","result","setResult","get","then","response","data","catch","error","handleExecuteSQL","post","console","handleSQLChange","e","target","value","style","containerStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","example","textAreaStyle","onChange","onClick","buttonStyle","map","item","index","whiteSpace","fontSize","padding","border","width","borderRadius","JSON","stringify","_c","display","flexDirection","alignItems","fontFamily","textAlign","marginTop","minHeight","margin","resize","overflowY","maxWidth","backgroundColor","color","cursor","$RefreshReg$"],"sources":["/Users/tyler/Desktop/Everything/School/4402/4402ClassProject/frontend4402/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //library to make http requests\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [sql, setSql] = useState('');\n  const [result, setResult] = useState([]); // State to store the API response\n\n  useEffect(() => {\n    // API call to http://localhost:8080/api/hello\n    axios.get('http://localhost:8080/api/hello')\n        .then(response => setMessage(response.data))\n        .catch(error => setMessage('Error connecting to backend and database.\\nPlease make sure backend is up and running at ' + \n                                    'http://localhost:8080.\\nIf it is not, open the backend4402 folder in IntelliJ (or another IDE) and ' + \n                                    'run the main class in Example4402Application.'));\n}, []);\n\n// API call to http://localhost:8080/api/sql \n  const handleExecuteSQL = () => {\n    axios.post('http://localhost:8080/api/sql', { sql: sql }) // sql is the argument accepted by the backend\n      .then((response) => {\n        setResult(response.data);\n      })\n      .catch((error) => {\n        console.error('Error executing SQL statement:', error);\n        setResult([]);\n      });\n  };\n\n  const handleSQLChange = (e) => {\n    setSql(e.target.value);\n  };\n\n  return (\n    <div style={containerStyle}>\n      <h1>CSC 4402 Project</h1>\n      <div style={example}>{message}</div>\n      <div><p></p></div>\n      \n      <label>\n      SQL Statement:</label>\n      <textarea\n        style={textAreaStyle}\n        value={sql}\n        onChange={handleSQLChange}\n      />\n\n      <button onClick={handleExecuteSQL} style={buttonStyle}>\n        Execute SQL\n      </button>\n\n      <div>\n      <h4>SQL Result:</h4>\n      {result.map((item, index) => (\n        <div key={index}>\n          <pre\n            style={{\n              whiteSpace: \"pre-line\",\n              fontSize: \"12px\",\n              padding: \"8px\",\n              border: \"1px solid #ccc\",\n              width:'100%',\n              borderRadius: \"5px\",\n            }}\n          >\n          {JSON.stringify(item, null, 2)}\n          </pre>\n        </div>\n      ))}\n\n    </div>\n\n      <div style={example}>\n      example statements to try:\n      <p>SELECT * FROM customer</p>\n      <p>INSERT INTO customer (first_name, last_name, phone_number, customer_license_num)\n      VALUES (12629, 16726, 50000, '06/26/2025', '06/26/2026', 544); </p>\n      </div>\n\n    </div>\n  );\n}\n\n\n// Some basic styles for the page\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  fontFamily: 'monospace',\n  fontSize: '1.2rem',\n  textAlign: 'center',\n  marginTop: '50px',\n};\n\nconst textAreaStyle = {\n  width: '30%',       // Set a fixed width\n  minHeight: '10%',   // Set a minimum height\n  padding: '10px',\n  margin:'20px',\n  resize: 'none',      // Disable resizing\n  overflowY: 'auto',   // Enable vertical scrolling if needed\n};\n\nconst example = {\n  width: '40%',       // Set a fixed width\n  minHeight: '10%',   // Set a minimum height\n  maxWidth: '50%',\n  padding: '10px',\n  resize: 'none',      // Disable resizing\n  fontSize: '1rem',\n};\n\nconst buttonStyle = {\n  backgroundColor: '#007bff',\n  color: 'white',\n  padding: '10px 20px',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}